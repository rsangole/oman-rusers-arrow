---
title: "Unlocking Big Data in R <br> Using Arrow"
subtitle: "Oman R Users"
author: "Rahul S"
date: "Nov 8, 2023"
logo: "images/arrow_logo.png"
footer: "Rahul S | Oman R Users | Nov 2023"
progress: true
menu: false
format: 
    revealjs: 
        center: false
        chalkboard: false
        smaller: true
        scrollable: true
        slide-number: true
        theme: [simple, css/theme.scss]
        toc-title: "/agenda"
        code-line-numbers: true
        toc: false
        echo: true
        # page-layout: custom
---

## /whoami

<br>

-   Data Scientist, Mechanical Engineer
-   Time Series, Anomaly Detection
-   R Packages
-   Shiny
-   ML Ops, Docker

:::footer
github: `rsangole`
:::

## /motivation

<br>


-  Do you have data larger than your memory?
-  Are your existing data transformation pipelines slow?
-  Do you wish you had a more performant toolkit for data exploration?
-  Wish you could do this without learning a new paradigm?

<!-- ![](images/dalle-brain.png){fig-align="center"} -->

## /my journey

<br>

::: {.r-stack}
![](images/p1.png)
:::

## /my journey {visibility="uncounted"}

<br>

![](images/p2.png)

## /my journey {visibility="uncounted"}

<br>

::: {layout-ncol=2}

![](images/p2.png)

![](images/850x6j.jpg){fig-align="center"}

:::

## /my journey {visibility="uncounted"}

<br>

![](images/p3.png)

## /arrow/what is it

::: columns
::: {.column width="40%"}
![](images/arrow_logo.png)
:::

::: {.column width="60%"}
<br>

:::{.incremental}
-   Language-independent _(C, C++, C#, Go, Java, JavaScript, Julia, MATLAB, Python, R, Ruby, & Rust)_
-   Columnar memory format
-   For flat and hierarchical data
-   Organized for efficient analytic operations
-   Supports zero-copy reads for lightning-fast data access
:::
:::
:::


:::aside
_Ref: https://arrow.apache.org, first released in 2017_
:::

## /arrow/advantages

::: columns
::: {.column width="70%"}
![](images/simd.png)
:::

::: {.column width="30%"}
<br>

- Fast Columnar Format
- Arrow Format Standardization
:::
:::

:::aside
_Ref: https://arrow.apache.org/overview/_
:::

## /arrow/R package

> The arrow R package exposes an interface to the Arrow C++ library, enabling access to many of its features in R

::: columns
::: {.column width="50%"}
**Read and write**

- Parquet files, an efficient and widely used columnar format
- CSV files with excellent speed and efficiency
- Multi-file and larger-than-memory datasets
- Read JSON files
:::

::: {.column width="50%"}
**Data analysis**
- Analyze larger-than-memory datasets
- Manipulate Arrow data with dplyr verbs

:::
:::

:::aside
_Ref: https://arrow.apache.org/docs/r/index.html_
:::


## /data

New York City Taxi and Limousine Commission

::: columns
::: {.column width="40%"}
![](images/nyc.jpg){width="100%"}

ðŸ”— https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page
:::

::: {.column width="60%"}
"Yellow and green taxi trip records ... pick-up and drop-off dates/times, pick-up and drop-off locations, trip distances, itemized fares, ..., passenger counts."

SIZE...

DIMENSION....
:::
:::

<!-- ## /arrow/basics

## /arrow/advanced usage -->

## /performance/parquet

## /performance/partitions

## /technicals/etl pipelines

## /wrap up

<br>

::: columns
::: {.column width="50%"}

![](images/85177c.jpg)

:::

::: {.column width="50%"}
1. Adopt an `{arrow}` first approach to data transformation
2. Use partitioned `parquet` files for performance 
3. Simplify your complex pipelines 
4. Use self documenting function names


:::
:::

## /ack

<br>

ðŸ”— [Arrow R Package](https://arrow.apache.org/docs/r/index.html)

ðŸ”— [Posit Conf 2023 2-Day Workshop](https://posit-conf-2023.github.io/arrow/)

ðŸ”— [Apache Arrow](https://arrow.apache.org)

# Ø´ÙƒØ±Ø§Ù‹

<br>

<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-github" viewBox="0 0 16 16">
  <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"/> `rsangole`
</svg> <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-linkedin" viewBox="0 0 16 16">
  <path d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z"/>`rahulsangole`
</svg>