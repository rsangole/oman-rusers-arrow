library(dplyr)
library(arrow)
# read data ----
nyc <- open_dataset(here::here("data/nyc_part"))
nyc
object.size(nyc)
str(nyc)
nyc_taxi |>
filter(year %in% 2017:2021) |>
group_by(year) |>
summarize(
all_trips = n(),
shared_trips = sum(passenger_count > 1, na.rm = TRUE)
) |>
mutate(pct_shared = shared_trips / all_trips * 100) |>
nrow()
nyc |>
filter(year %in% 2017:2021) |>
group_by(year) |>
summarize(
all_trips = n(),
shared_trips = sum(passenger_count > 1, na.rm = TRUE)
) |>
mutate(pct_shared = shared_trips / all_trips * 100) |>
nrow()
nyc |>
filter(year %in% 2017:2021) |>
group_by(year) |>
summarize(
all_trips = n(),
shared_trips = sum(passenger_count > 1, na.rm = TRUE)
) |>
mutate(pct_shared = shared_trips / all_trips * 100)
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
library(dbplyr)
library(arrow)
library(duckdb)
# read data ----
nyc <- open_dataset(here::here("data/nyc_part"))
nyc
object.size(nyc)
str(nyc)
# setup ----
library(dplyr)
library(arrow)
# read data ----
nyc <- open_dataset(here::here("data/nyc_part"))
nyc
format(object.size(nyc), 'MB')
format(object.size(nyc), 'b')
object.size(nyc)
object.size(nyc)
class(nyc)
str(nyc)
schema(nyc)
print(nyc)
head(nyc)
head(nyc) |> collect()
schema(nyc)
nyc |>
select(
contains('pickup')
)
nyc |>
select(
contains('pickup')
) |>
head()
nyc |>
select(
contains('pickup')
) |>
head() |>
collect()
nyc
nyc |>
distinct(year, month)
tic()
nyc |>
distinct(year, month) |>
collect()
toc()
library(tictoc)
tic()
nyc |>
distinct(year, month) |>
arrange(month) |>
collect()
toc()
tic()
nyc |>
distinct(year, month) |>
arrange(year, month) |>
collect()
toc()
# setup ----
library(dplyr)
library(arrow)
library(tictoc)
# read data ----
nyc <- open_dataset(here::here("data/nyc_part"))
nyc
# Fails...
nyc |>
group_by(year) |>
summarise(max_trip_dist = max(trip_distance)) |>
head() |>
collect()
# Pivoting ----
library(tidyr)
nyc |>
group_by(year) |>
summarise(max_trip_dist = max(trip_distance)) |>
pivot_wider(-year)
nyc |>
group_by(year) |>
summarise(max_trip_dist = max(trip_distance)) |>
to_duckdb()
nyc |>
group_by(year) |>
summarise(max_trip_dist = max(trip_distance)) |>
to_duckdb() |>
pivot_wider(-year)
nyc |>
group_by(year) |>
summarise(max_trip_dist = max(trip_distance)) |>
to_duckdb() |>
pivot_wider(names_from = 'year', values_from = 'max_trip_dist')
nyc |>
group_by(paste0("Y", year))
nyc |>
group_by(paste0("Y", year)) |>
summarise(max_trip_dist = max(trip_distance)) |>
to_duckdb() |>
pivot_wider(names_from = 'year', values_from = 'max_trip_dist')
nyc |>
group_by(year = paste0("Y", year))
nyc |>
group_by(year = paste0("Y", year)) |>
summarise(max_trip_dist = max(trip_distance)) |>
to_duckdb() |>
pivot_wider(names_from = 'year', values_from = 'max_trip_dist')
nyc |>
group_by(year = paste0("Y", year)) |>
summarise(max_trip_dist = max(trip_distance)) |>
to_duckdb() |>
pivot_wider(names_from = 'year', values_from = 'max_trip_dist') |>
to_arrow() |>
collect()
# [A] Problem ----
nyc
nyc |>
group_by(year) |>
# group_by(year = paste0("Y", year)) |>
summarise(max_trip_dist = max(trip_distance)) |>
to_duckdb() |>
pivot_wider(names_from = 'year', values_from = 'max_trip_dist') |>
to_arrow() |>
collect()
# [A] Problem ----
nyc |>
select(year, contains('datetime'), total_amount)
# [A] Problem ----
nyc |>
select(year, contains('datetime'), total_amount) |>
group_by(year) |>
mutate(yearly_totals = sum(total_amount))
to_arrow() |>
head() |>
collect()
# [B] Solution ----
nyc |>
select(year, contains('datetime'), total_amount) |>
group_by(year) |>
to_duckdb() |>
mutate(yearly_totals = sum(total_amount)) |>
to_arrow() |>
head() |>
collect()
